name: Export Modpack
run-name: Exporting ${{ inputs.version != ''  && inputs.version || (startsWith(github.ref, 'refs/tags/') && github.ref_name || 'Snapshot')}}.
on:
  push:
    paths:
      - 'modpack/**'
      - '!modpack/packwiz*'
      - '!modpack/.packwizignore'
  workflow_dispatch:
    inputs:
      version:
        required: false
        type: string
        description: Version to Tag with
env:
  PACK_NAME: LySMP
  BETA_SUFFIX: beta
  ALPHA_SUFFIX: alpha
  SNAPSHOT_SUFFIX: build
jobs:
  versioning:
    name: Define version
    runs-on: ubuntu-latest
    outputs:
      version: ${{env.version}}
    env:
      version: ''
    steps:
      - if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: echo "version=${{github.ref_name}}" >> "$GITHUB_ENV"
      - if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: echo "version=${{env.SNAPSHOT_SUFFIX}}.${{github.run_number}}" >> "$GITHUB_ENV"
      - if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "version=${{inputs.version}}" >> "$GITHUB_ENV"

  export:
    name: Export Modpack
    runs-on: windows-latest
    needs:
      - versioning
    env:
      VERSION: ${{needs.versioning.outputs.version}}
    steps:
      - name: Checkout pack
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            modpack/**
          sparse-checkout-cone-mode: false
      - name: Export Build as .mrpack
        working-directory: modpack
        run: |
          ./packwiz.exe modrinth export --output ${{env.PACK_NAME}}-${{env.VERSION}}.mrpack
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.PACK_NAME}}-${{env.VERSION}}
          path: modpack/${{env.PACK_NAME}}-${{env.VERSION}}.mrpack
          if-no-files-found: error
          overwrite: true

  release:
    name: Make Releases
    runs-on: ubuntu-latest
    needs:
      - versioning
      - export
    permissions:
      contents: write
    env:
      VERSION: ${{needs.versioning.outputs.version}}
    steps:
      - uses: actions/checkout@v4

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{env.PACK_NAME}}-${{env.VERSION}}

      # =-=-=-=-=-=-=-=-=-=-= SETUP RELEASE =-=-=-=-=-=-=-=-=-=-=-=-=-=
      - name: Setup Release Body
        run: |
          cat << EOF > RELEASE_BODY
          To use the modpack, download the file\
          `${{env.PACK_NAME}}-${{env.VERSION}}.mrpack`\
          and import into your preferred launcher.
          
          note: curseforge does not support mrpacks.
          EOF

      - name: GH Release Version
        if: ${{ !contains(env.VERSION, env.SNAPSHOT_SUFFIX) }}
        uses: softprops/action-gh-release@v2.0.8
        with:
          prerelease: ${{ contains(env.VERSION, env.BETA_SUFFIX) || contains(env.VERSION, env.ALPHA_SUFFIX) }}
          make_latest: ${{ !( contains(env.VERSION, env.BETA_SUFFIX) || contains(env.VERSION, env.ALPHA_SUFFIX) ) }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          tag_name: ${{ env.VERSION }}
          files: ${{env.PACK_NAME}}-${{env.VERSION}}.mrpack
          body_path: RELEASE_BODY

      # =-=-=-=-=-=-=-=-=-=-= SETUP GIT =-=-=-=-=-=-=-=-=-=-=-=
      - name: Setup git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # =-=-=-=-=-=-=-=-=-=-= SETUP NIGHTLY RELEASES =-=-=-=-=-=-=-=-=-=-=-=
      - name: Append Nightly info to Release Body
        run: |
          cat << EOF >> RELEASE_BODY

          ${{ !contains(env.VERSION, env.SNAPSHOT_SUFFIX) && format('[{0}](https://github.com/LizzieSpace/LySMP/releases/tag/{0})', env.VERSION) || format('[{0}](https://github.com/LizzieSpace/LySMP/actions/runs/{1})',env.VERSION ,github.run_id)}}\
          ${{ ( contains(env.VERSION, env.SNAPSHOT_SUFFIX) || contains(env.VERSION, env.ALPHA_SUFFIX)) && ' is unstable! Use it at your own risk.' || ' is mostly stable' }}\
          ${{ contains(env.VERSION, env.BETA_SUFFIX) && ' but still a work in progress. Exercise caution and frequently backup your worlds!' || '.' }}

          EOF
      # =-=-=-=-=-=-=-=-=-=-= Latest Snapshot Release =-=-=-=-=-=-=-=-=-=-=-=
      - name: Delete previous Snapshot release
        continue-on-error: true
        run: gh release delete SNAPSHOT --cleanup-tag --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag as snapshot
        run: git tag -f -a SNAPSHOT -m "Latest version of the modpack"

      - name: GH Release Snapshot
        uses: softprops/action-gh-release@v2.0.8
        with:
          prerelease: ${{ contains(env.VERSION, env.SNAPSHOT_SUFFIX) || ( contains(env.VERSION, env.BETA_SUFFIX) || contains(env.VERSION, env.ALPHA_SUFFIX) )}}
          make_latest: false
          generate_release_notes: false
          fail_on_unmatched_files: true
          name: ${{env.VERSION}}
          tag_name: SNAPSHOT
          files: ${{env.PACK_NAME}}-${{env.VERSION}}.mrpack
          body_path: RELEASE_BODY

      # =-=-=-=-=-=-=-=-=-= Latest Stable Release =-=-=-=-=-=-=-=-=-=-=
      - name: Delete previous Stable release
        continue-on-error: true
        if: ${{ !contains(env.VERSION, env.SNAPSHOT_SUFFIX) && !contains(env.VERSION, env.ALPHA_SUFFIX) }}
        run: gh release delete stable --cleanup-tag --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag as stable
        if: ${{ !contains(env.VERSION, env.SNAPSHOT_SUFFIX) && !contains(env.VERSION, env.ALPHA_SUFFIX) }}
        run: git tag -f -a stable -m "Latest stable version of the modpack"

      - name: GH Release Stable
        if: ${{ !contains(env.VERSION, env.SNAPSHOT_SUFFIX) && !contains(env.VERSION, env.ALPHA_SUFFIX) }}
        uses: softprops/action-gh-release@v2.0.8
        with:
          prerelease: ${{ contains(env.VERSION, env.BETA_SUFFIX) }}
          make_latest: false
          generate_release_notes: false
          fail_on_unmatched_files: true
          name: ${{env.VERSION}}
          tag_name: stable
          files: ${{env.PACK_NAME}}-${{env.VERSION}}.mrpack
          body_path: RELEASE_BODY

      # =-=-=-=-=-=-=-=-=-=-= PUSH UPDATED GIT TAGS =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      - name: Push tags
        run: git push origin --tags --force

      # =-=-=-=-=-=-=-=-=-=-= DELETE OUTDATED PRE-RELEASES =-=-=-=-=-=-=-=-=-=-=-=
      - name: Delete Older Beta Releases
        uses: s00d/delete-older-releases@0.2.1
        with:
          keep_latest: 3
          delete_tag_pattern: ${{env.BETA_SUFFIX}}
          delete_type: prerelease
          delete_branch: ${{github.ref_name}}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Delete Older Alpha Releases
        uses: s00d/delete-older-releases@0.2.1
        with:
          keep_latest: 3
          delete_tag_pattern: ${{env.ALPHA_SUFFIX}}
          delete_type: prerelease
          delete_branch: ${{github.ref_name}}
        env:
          GITHUB_TOKEN: ${{ github.token }}

